apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-serialization'

def debugApiBaseUrl = "\"https://justjava.marknjunge.com/\""
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(localPropertiesFile))

    // Ability to provide a different debug url
    def overrideUrl = localProperties.getProperty("debugApiBaseUrl")
    if (overrideUrl != null) {
        debugApiBaseUrl = overrideUrl
    }
}

android {

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "API_BASE_URL", debugApiBaseUrl
        }
        release {
            minifyEnabled true
            consumerProguardFiles 'proguard-rules.pro'
            buildConfigField "String", "API_BASE_URL", "\"https://justjava.marknjunge.com/\""
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.5.0"

    implementation "androidx.appcompat:appcompat:1.3.0"

    // REST
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    // Other
    implementation "com.jakewharton.timber:timber:4.7.1"

    testImplementation "junit:junit:4.13"
    androidTestImplementation "androidx.test:runner:1.3.0-rc01"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0-rc01"
    testImplementation "io.mockk:mockk:1.11.0"
}